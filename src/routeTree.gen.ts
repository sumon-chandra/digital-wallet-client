/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as _mainRouteImport } from './routes/__main'
import { Route as DashboardIndexRouteImport } from './routes/dashboard/index'
import { Route as _mainIndexRouteImport } from './routes/__main.index'
import { Route as DashboardUsersRouteImport } from './routes/dashboard/users'
import { Route as DashboardUnauthorizedRouteImport } from './routes/dashboard/unauthorized'
import { Route as _mainSignupRouteImport } from './routes/__main.signup'
import { Route as _mainPricingRouteImport } from './routes/__main.pricing'
import { Route as _mainLoginRouteImport } from './routes/__main.login'
import { Route as _mainFaqRouteImport } from './routes/__main.faq'
import { Route as _mainContactRouteImport } from './routes/__main.contact'
import { Route as _mainAboutRouteImport } from './routes/__main.about'

const _mainRoute = _mainRouteImport.update({
  id: '/__main',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardIndexRoute = DashboardIndexRouteImport.update({
  id: '/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => rootRouteImport,
} as any)
const _mainIndexRoute = _mainIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => _mainRoute,
} as any)
const DashboardUsersRoute = DashboardUsersRouteImport.update({
  id: '/dashboard/users',
  path: '/dashboard/users',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardUnauthorizedRoute = DashboardUnauthorizedRouteImport.update({
  id: '/dashboard/unauthorized',
  path: '/dashboard/unauthorized',
  getParentRoute: () => rootRouteImport,
} as any)
const _mainSignupRoute = _mainSignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => _mainRoute,
} as any)
const _mainPricingRoute = _mainPricingRouteImport.update({
  id: '/pricing',
  path: '/pricing',
  getParentRoute: () => _mainRoute,
} as any)
const _mainLoginRoute = _mainLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => _mainRoute,
} as any)
const _mainFaqRoute = _mainFaqRouteImport.update({
  id: '/faq',
  path: '/faq',
  getParentRoute: () => _mainRoute,
} as any)
const _mainContactRoute = _mainContactRouteImport.update({
  id: '/contact',
  path: '/contact',
  getParentRoute: () => _mainRoute,
} as any)
const _mainAboutRoute = _mainAboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => _mainRoute,
} as any)

export interface FileRoutesByFullPath {
  '/about': typeof _mainAboutRoute
  '/contact': typeof _mainContactRoute
  '/faq': typeof _mainFaqRoute
  '/login': typeof _mainLoginRoute
  '/pricing': typeof _mainPricingRoute
  '/signup': typeof _mainSignupRoute
  '/dashboard/unauthorized': typeof DashboardUnauthorizedRoute
  '/dashboard/users': typeof DashboardUsersRoute
  '/': typeof _mainIndexRoute
  '/dashboard': typeof DashboardIndexRoute
}
export interface FileRoutesByTo {
  '/about': typeof _mainAboutRoute
  '/contact': typeof _mainContactRoute
  '/faq': typeof _mainFaqRoute
  '/login': typeof _mainLoginRoute
  '/pricing': typeof _mainPricingRoute
  '/signup': typeof _mainSignupRoute
  '/dashboard/unauthorized': typeof DashboardUnauthorizedRoute
  '/dashboard/users': typeof DashboardUsersRoute
  '/': typeof _mainIndexRoute
  '/dashboard': typeof DashboardIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/__main': typeof _mainRouteWithChildren
  '/__main/about': typeof _mainAboutRoute
  '/__main/contact': typeof _mainContactRoute
  '/__main/faq': typeof _mainFaqRoute
  '/__main/login': typeof _mainLoginRoute
  '/__main/pricing': typeof _mainPricingRoute
  '/__main/signup': typeof _mainSignupRoute
  '/dashboard/unauthorized': typeof DashboardUnauthorizedRoute
  '/dashboard/users': typeof DashboardUsersRoute
  '/__main/': typeof _mainIndexRoute
  '/dashboard/': typeof DashboardIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/about'
    | '/contact'
    | '/faq'
    | '/login'
    | '/pricing'
    | '/signup'
    | '/dashboard/unauthorized'
    | '/dashboard/users'
    | '/'
    | '/dashboard'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/about'
    | '/contact'
    | '/faq'
    | '/login'
    | '/pricing'
    | '/signup'
    | '/dashboard/unauthorized'
    | '/dashboard/users'
    | '/'
    | '/dashboard'
  id:
    | '__root__'
    | '/__main'
    | '/__main/about'
    | '/__main/contact'
    | '/__main/faq'
    | '/__main/login'
    | '/__main/pricing'
    | '/__main/signup'
    | '/dashboard/unauthorized'
    | '/dashboard/users'
    | '/__main/'
    | '/dashboard/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  _mainRoute: typeof _mainRouteWithChildren
  DashboardUnauthorizedRoute: typeof DashboardUnauthorizedRoute
  DashboardUsersRoute: typeof DashboardUsersRoute
  DashboardIndexRoute: typeof DashboardIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/__main': {
      id: '/__main'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof _mainRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/__main/': {
      id: '/__main/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof _mainIndexRouteImport
      parentRoute: typeof _mainRoute
    }
    '/dashboard/users': {
      id: '/dashboard/users'
      path: '/dashboard/users'
      fullPath: '/dashboard/users'
      preLoaderRoute: typeof DashboardUsersRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/unauthorized': {
      id: '/dashboard/unauthorized'
      path: '/dashboard/unauthorized'
      fullPath: '/dashboard/unauthorized'
      preLoaderRoute: typeof DashboardUnauthorizedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/__main/signup': {
      id: '/__main/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof _mainSignupRouteImport
      parentRoute: typeof _mainRoute
    }
    '/__main/pricing': {
      id: '/__main/pricing'
      path: '/pricing'
      fullPath: '/pricing'
      preLoaderRoute: typeof _mainPricingRouteImport
      parentRoute: typeof _mainRoute
    }
    '/__main/login': {
      id: '/__main/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof _mainLoginRouteImport
      parentRoute: typeof _mainRoute
    }
    '/__main/faq': {
      id: '/__main/faq'
      path: '/faq'
      fullPath: '/faq'
      preLoaderRoute: typeof _mainFaqRouteImport
      parentRoute: typeof _mainRoute
    }
    '/__main/contact': {
      id: '/__main/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof _mainContactRouteImport
      parentRoute: typeof _mainRoute
    }
    '/__main/about': {
      id: '/__main/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof _mainAboutRouteImport
      parentRoute: typeof _mainRoute
    }
  }
}

interface _mainRouteChildren {
  _mainAboutRoute: typeof _mainAboutRoute
  _mainContactRoute: typeof _mainContactRoute
  _mainFaqRoute: typeof _mainFaqRoute
  _mainLoginRoute: typeof _mainLoginRoute
  _mainPricingRoute: typeof _mainPricingRoute
  _mainSignupRoute: typeof _mainSignupRoute
  _mainIndexRoute: typeof _mainIndexRoute
}

const _mainRouteChildren: _mainRouteChildren = {
  _mainAboutRoute: _mainAboutRoute,
  _mainContactRoute: _mainContactRoute,
  _mainFaqRoute: _mainFaqRoute,
  _mainLoginRoute: _mainLoginRoute,
  _mainPricingRoute: _mainPricingRoute,
  _mainSignupRoute: _mainSignupRoute,
  _mainIndexRoute: _mainIndexRoute,
}

const _mainRouteWithChildren = _mainRoute._addFileChildren(_mainRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  _mainRoute: _mainRouteWithChildren,
  DashboardUnauthorizedRoute: DashboardUnauthorizedRoute,
  DashboardUsersRoute: DashboardUsersRoute,
  DashboardIndexRoute: DashboardIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
